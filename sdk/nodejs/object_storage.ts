// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Object_storage extends pulumi.CustomResource {
    /**
     * Get an existing Object_storage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Object_storageState, opts?: pulumi.CustomResourceOptions): Object_storage {
        return new Object_storage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'contabo:index/object_storage:object_storage';

    /**
     * Returns true if the given object is an instance of Object_storage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Object_storage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Object_storage.__pulumiType;
    }

    public readonly autoScalings!: pulumi.Output<outputs.Object_storageAutoScaling[] | undefined>;
    /**
     * The date on which the Object Storage will be cancelled and therefore no longer available.
     */
    public /*out*/ readonly cancelDate!: pulumi.Output<string>;
    /**
     * The creation date of the Object Storage.
     */
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    /**
     * Your customer number.
     */
    public /*out*/ readonly customerId!: pulumi.Output<string>;
    /**
     * Data center the object storage is located in.
     */
    public /*out*/ readonly dataCenter!: pulumi.Output<string>;
    /**
     * Display name for object storage.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Region where the Object Storage should be located. Default region is the EU. Following regions are available:
     * `EU`,`US-central`, `SIN`.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Your S3 tenant Id. Only required for public sharing.
     */
    public /*out*/ readonly s3TenantId!: pulumi.Output<string>;
    /**
     * S3 URL to connect to your S3 compatible Object Storage.
     */
    public /*out*/ readonly s3Url!: pulumi.Output<string>;
    /**
     * The object storage status. It can be set to `PROVISIONING`,`READY`,`UPGRADING`,`CANCELLED`,`ERROR` or `DISABLED`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Your customer tenant Id.
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    /**
     * Amount of purchased / requested object storage in terabyte.
     */
    public readonly totalPurchasedSpaceTb!: pulumi.Output<number>;

    /**
     * Create a Object_storage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Object_storageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Object_storageArgs | Object_storageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Object_storageState | undefined;
            resourceInputs["autoScalings"] = state ? state.autoScalings : undefined;
            resourceInputs["cancelDate"] = state ? state.cancelDate : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["customerId"] = state ? state.customerId : undefined;
            resourceInputs["dataCenter"] = state ? state.dataCenter : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["s3TenantId"] = state ? state.s3TenantId : undefined;
            resourceInputs["s3Url"] = state ? state.s3Url : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["totalPurchasedSpaceTb"] = state ? state.totalPurchasedSpaceTb : undefined;
        } else {
            const args = argsOrState as Object_storageArgs | undefined;
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.totalPurchasedSpaceTb === undefined) && !opts.urn) {
                throw new Error("Missing required property 'totalPurchasedSpaceTb'");
            }
            resourceInputs["autoScalings"] = args ? args.autoScalings : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["totalPurchasedSpaceTb"] = args ? args.totalPurchasedSpaceTb : undefined;
            resourceInputs["cancelDate"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["customerId"] = undefined /*out*/;
            resourceInputs["dataCenter"] = undefined /*out*/;
            resourceInputs["s3TenantId"] = undefined /*out*/;
            resourceInputs["s3Url"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Object_storage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering object_storage resources.
 */
export interface Object_storageState {
    autoScalings?: pulumi.Input<pulumi.Input<inputs.Object_storageAutoScaling>[]>;
    /**
     * The date on which the Object Storage will be cancelled and therefore no longer available.
     */
    cancelDate?: pulumi.Input<string>;
    /**
     * The creation date of the Object Storage.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * Your customer number.
     */
    customerId?: pulumi.Input<string>;
    /**
     * Data center the object storage is located in.
     */
    dataCenter?: pulumi.Input<string>;
    /**
     * Display name for object storage.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Region where the Object Storage should be located. Default region is the EU. Following regions are available:
     * `EU`,`US-central`, `SIN`.
     */
    region?: pulumi.Input<string>;
    /**
     * Your S3 tenant Id. Only required for public sharing.
     */
    s3TenantId?: pulumi.Input<string>;
    /**
     * S3 URL to connect to your S3 compatible Object Storage.
     */
    s3Url?: pulumi.Input<string>;
    /**
     * The object storage status. It can be set to `PROVISIONING`,`READY`,`UPGRADING`,`CANCELLED`,`ERROR` or `DISABLED`.
     */
    status?: pulumi.Input<string>;
    /**
     * Your customer tenant Id.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Amount of purchased / requested object storage in terabyte.
     */
    totalPurchasedSpaceTb?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Object_storage resource.
 */
export interface Object_storageArgs {
    autoScalings?: pulumi.Input<pulumi.Input<inputs.Object_storageAutoScaling>[]>;
    /**
     * Display name for object storage.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Region where the Object Storage should be located. Default region is the EU. Following regions are available:
     * `EU`,`US-central`, `SIN`.
     */
    region: pulumi.Input<string>;
    /**
     * Amount of purchased / requested object storage in terabyte.
     */
    totalPurchasedSpaceTb: pulumi.Input<number>;
}
