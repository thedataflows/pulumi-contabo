// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("contabo:index/getInstance:getInstance", {
        "addOns": args.addOns,
        "cancelDate": args.cancelDate,
        "displayName": args.displayName,
        "id": args.id,
        "imageId": args.imageId,
        "license": args.license,
        "productId": args.productId,
        "region": args.region,
        "sshKeys": args.sshKeys,
        "userData": args.userData,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    addOns?: inputs.GetInstanceAddOn[];
    cancelDate?: string;
    displayName?: string;
    id: string;
    imageId?: string;
    license?: string;
    productId?: string;
    region?: string;
    sshKeys?: number[];
    userData?: string;
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    readonly addOns: outputs.GetInstanceAddOn[];
    readonly additionalIpsV4s: outputs.GetInstanceAdditionalIpsV4[];
    readonly cancelDate: string;
    readonly cpuCores: number;
    readonly createdDate: string;
    readonly diskMb: number;
    readonly displayName: string;
    readonly errorMessage: string;
    readonly id: string;
    readonly imageId: string;
    readonly ipConfigs: outputs.GetInstanceIpConfig[];
    readonly lastUpdated: string;
    readonly license: string;
    readonly macAddress: string;
    readonly name: string;
    readonly osType: string;
    readonly period: number;
    readonly productId: string;
    readonly productType: string;
    readonly ramMb: number;
    readonly region: string;
    readonly sshKeys: number[];
    readonly status: string;
    readonly userData: string;
    readonly vHostId: number;
}
export function getInstanceOutput(args: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult> {
    return pulumi.output(args).apply((a: any) => getInstance(a, opts))
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceOutputArgs {
    addOns?: pulumi.Input<pulumi.Input<inputs.GetInstanceAddOnArgs>[]>;
    cancelDate?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    license?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    sshKeys?: pulumi.Input<pulumi.Input<number>[]>;
    userData?: pulumi.Input<string>;
}
