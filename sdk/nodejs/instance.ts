// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'contabo:index/instance:instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    public readonly addOns!: pulumi.Output<outputs.InstanceAddOn[]>;
    /**
     * All other additional IP addresses of the instance.
     */
    public /*out*/ readonly additionalIps!: pulumi.Output<outputs.InstanceAdditionalIp[]>;
    /**
     * The date on which the instance will be cancelled.
     */
    public readonly cancelDate!: pulumi.Output<string | undefined>;
    /**
     * CPU core count of the instance.
     */
    public /*out*/ readonly cpuCores!: pulumi.Output<number>;
    /**
     * The creation date of the compute instance.
     */
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    /**
     * Image disk size of the instance in megabyte.
     */
    public /*out*/ readonly diskMb!: pulumi.Output<number>;
    /**
     * The instance name chosen by the customer that will be shown in the customer panel.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * If the instance is in an error state (see status property), the error message can be seen in this field.
     */
    public /*out*/ readonly errorMessage!: pulumi.Output<string>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
     * 20.04 is the default, currently you have to get the Id with our
     * [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
     * line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
     */
    public readonly imageId!: pulumi.Output<string>;
    public /*out*/ readonly ipConfigs!: pulumi.Output<outputs.InstanceIpConfig[]>;
    /**
     * Time of the last update of the compute instance.
     */
    public /*out*/ readonly lastUpdated!: pulumi.Output<string>;
    /**
     * Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
     * (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
     * for all available licenses.
     */
    public readonly license!: pulumi.Output<string>;
    /**
     * Mac address of the instance.
     */
    public /*out*/ readonly macAddress!: pulumi.Output<string>;
    /**
     * Name of the compute instance.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Type of operating system (OS) installed on the instance.
     */
    public /*out*/ readonly osType!: pulumi.Output<string>;
    /**
     * Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
     */
    public readonly period!: pulumi.Output<number>;
    /**
     * Choose the VPS/VDS product you want to buy. See our products
     * [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
     */
    public readonly productId!: pulumi.Output<string>;
    /**
     * InsInstance's category depending on Product Id. Following product types are available: `hdd`,`ssd`,`vds`,`nvme`.
     */
    public /*out*/ readonly productType!: pulumi.Output<string>;
    /**
     * Image ram size in megabyte.
     */
    public /*out*/ readonly ramMb!: pulumi.Output<number>;
    /**
     * Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
     * `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
     */
    public readonly rootPassword!: pulumi.Output<number | undefined>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
     * into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
     * API.
     */
    public readonly sshKeys!: pulumi.Output<number[]>;
    /**
     * Status of the compute instance. The status can be set to `provisioning`, `uninstalled`, `running`, `stopped`, `error`,
     * `installing`, `unknown`, or `installed`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
     * compute instance.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * Identifier of the host system.
     */
    public /*out*/ readonly vHostId!: pulumi.Output<number>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["addOns"] = state ? state.addOns : undefined;
            resourceInputs["additionalIps"] = state ? state.additionalIps : undefined;
            resourceInputs["cancelDate"] = state ? state.cancelDate : undefined;
            resourceInputs["cpuCores"] = state ? state.cpuCores : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["diskMb"] = state ? state.diskMb : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["errorMessage"] = state ? state.errorMessage : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["ipConfigs"] = state ? state.ipConfigs : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["license"] = state ? state.license : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["osType"] = state ? state.osType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["productType"] = state ? state.productType : undefined;
            resourceInputs["ramMb"] = state ? state.ramMb : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["rootPassword"] = state ? state.rootPassword : undefined;
            resourceInputs["sshKeys"] = state ? state.sshKeys : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["vHostId"] = state ? state.vHostId : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            resourceInputs["addOns"] = args ? args.addOns : undefined;
            resourceInputs["cancelDate"] = args ? args.cancelDate : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["license"] = args ? args.license : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["rootPassword"] = args ? args.rootPassword : undefined;
            resourceInputs["sshKeys"] = args ? args.sshKeys : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["additionalIps"] = undefined /*out*/;
            resourceInputs["cpuCores"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["diskMb"] = undefined /*out*/;
            resourceInputs["errorMessage"] = undefined /*out*/;
            resourceInputs["ipConfigs"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["productType"] = undefined /*out*/;
            resourceInputs["ramMb"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vHostId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering instance resources.
 */
export interface InstanceState {
    addOns?: pulumi.Input<pulumi.Input<inputs.InstanceAddOn>[]>;
    /**
     * All other additional IP addresses of the instance.
     */
    additionalIps?: pulumi.Input<pulumi.Input<inputs.InstanceAdditionalIp>[]>;
    /**
     * The date on which the instance will be cancelled.
     */
    cancelDate?: pulumi.Input<string>;
    /**
     * CPU core count of the instance.
     */
    cpuCores?: pulumi.Input<number>;
    /**
     * The creation date of the compute instance.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * Image disk size of the instance in megabyte.
     */
    diskMb?: pulumi.Input<number>;
    /**
     * The instance name chosen by the customer that will be shown in the customer panel.
     */
    displayName?: pulumi.Input<string>;
    /**
     * If the instance is in an error state (see status property), the error message can be seen in this field.
     */
    errorMessage?: pulumi.Input<string>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
     * 20.04 is the default, currently you have to get the Id with our
     * [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
     * line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
     */
    imageId?: pulumi.Input<string>;
    ipConfigs?: pulumi.Input<pulumi.Input<inputs.InstanceIpConfig>[]>;
    /**
     * Time of the last update of the compute instance.
     */
    lastUpdated?: pulumi.Input<string>;
    /**
     * Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
     * (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
     * for all available licenses.
     */
    license?: pulumi.Input<string>;
    /**
     * Mac address of the instance.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Name of the compute instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of operating system (OS) installed on the instance.
     */
    osType?: pulumi.Input<string>;
    /**
     * Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
     */
    period?: pulumi.Input<number>;
    /**
     * Choose the VPS/VDS product you want to buy. See our products
     * [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
     */
    productId?: pulumi.Input<string>;
    /**
     * InsInstance's category depending on Product Id. Following product types are available: `hdd`,`ssd`,`vds`,`nvme`.
     */
    productType?: pulumi.Input<string>;
    /**
     * Image ram size in megabyte.
     */
    ramMb?: pulumi.Input<number>;
    /**
     * Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
     * `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
     */
    region?: pulumi.Input<string>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
     */
    rootPassword?: pulumi.Input<number>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
     * into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
     * API.
     */
    sshKeys?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Status of the compute instance. The status can be set to `provisioning`, `uninstalled`, `running`, `stopped`, `error`,
     * `installing`, `unknown`, or `installed`.
     */
    status?: pulumi.Input<string>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
     * compute instance.
     */
    userData?: pulumi.Input<string>;
    /**
     * Identifier of the host system.
     */
    vHostId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    addOns?: pulumi.Input<pulumi.Input<inputs.InstanceAddOn>[]>;
    /**
     * The date on which the instance will be cancelled.
     */
    cancelDate?: pulumi.Input<string>;
    /**
     * The instance name chosen by the customer that will be shown in the customer panel.
     */
    displayName?: pulumi.Input<string>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
     * 20.04 is the default, currently you have to get the Id with our
     * [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
     * line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
     * (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
     * for all available licenses.
     */
    license?: pulumi.Input<string>;
    /**
     * Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
     */
    period?: pulumi.Input<number>;
    /**
     * Choose the VPS/VDS product you want to buy. See our products
     * [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
     */
    productId?: pulumi.Input<string>;
    /**
     * Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
     * `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
     */
    region?: pulumi.Input<string>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
     */
    rootPassword?: pulumi.Input<number>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
     * into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
     * API.
     */
    sshKeys?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
     * compute instance.
     */
    userData?: pulumi.Input<string>;
}
