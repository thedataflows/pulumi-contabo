// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Private_network extends pulumi.CustomResource {
    /**
     * Get an existing Private_network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Private_networkState, opts?: pulumi.CustomResourceOptions): Private_network {
        return new Private_network(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'contabo:index/private_network:private_network';

    /**
     * Returns true if the given object is an instance of Private_network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Private_network {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Private_network.__pulumiType;
    }

    /**
     * The totality of available IPs in the Private Network.
     */
    public /*out*/ readonly availableIps!: pulumi.Output<number>;
    /**
     * The cidr range of the Private Network.
     */
    public /*out*/ readonly cidr!: pulumi.Output<string>;
    /**
     * The creation date of the Private Network.
     */
    public readonly createdDate!: pulumi.Output<string>;
    /**
     * The specific data center where the Private Network is located.
     */
    public /*out*/ readonly dataCenter!: pulumi.Output<string>;
    /**
     * The description of the Private Network. There is a limit of 255 characters per Private Network.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
     * created.
     */
    public readonly instanceIds!: pulumi.Output<number[] | undefined>;
    public /*out*/ readonly instances!: pulumi.Output<outputs.Private_networkInstance[]>;
    /**
     * The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
     * 255 characters per Private Network name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The region where the Private Network should be located. Default region is the EU.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The name of the region where the Private Network is located.
     */
    public readonly regionName!: pulumi.Output<string>;
    /**
     * Time of the last update of the private network.
     */
    public readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Private_network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Private_networkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Private_networkArgs | Private_networkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Private_networkState | undefined;
            resourceInputs["availableIps"] = state ? state.availableIps : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["dataCenter"] = state ? state.dataCenter : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceIds"] = state ? state.instanceIds : undefined;
            resourceInputs["instances"] = state ? state.instances : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["regionName"] = state ? state.regionName : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as Private_networkArgs | undefined;
            resourceInputs["createdDate"] = args ? args.createdDate : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceIds"] = args ? args.instanceIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["regionName"] = args ? args.regionName : undefined;
            resourceInputs["updatedAt"] = args ? args.updatedAt : undefined;
            resourceInputs["availableIps"] = undefined /*out*/;
            resourceInputs["cidr"] = undefined /*out*/;
            resourceInputs["dataCenter"] = undefined /*out*/;
            resourceInputs["instances"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Private_network.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering private_network resources.
 */
export interface Private_networkState {
    /**
     * The totality of available IPs in the Private Network.
     */
    availableIps?: pulumi.Input<number>;
    /**
     * The cidr range of the Private Network.
     */
    cidr?: pulumi.Input<string>;
    /**
     * The creation date of the Private Network.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * The specific data center where the Private Network is located.
     */
    dataCenter?: pulumi.Input<string>;
    /**
     * The description of the Private Network. There is a limit of 255 characters per Private Network.
     */
    description?: pulumi.Input<string>;
    /**
     * Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
     * created.
     */
    instanceIds?: pulumi.Input<pulumi.Input<number>[]>;
    instances?: pulumi.Input<pulumi.Input<inputs.Private_networkInstance>[]>;
    /**
     * The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
     * 255 characters per Private Network name.
     */
    name?: pulumi.Input<string>;
    /**
     * The region where the Private Network should be located. Default region is the EU.
     */
    region?: pulumi.Input<string>;
    /**
     * The name of the region where the Private Network is located.
     */
    regionName?: pulumi.Input<string>;
    /**
     * Time of the last update of the private network.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Private_network resource.
 */
export interface Private_networkArgs {
    /**
     * The creation date of the Private Network.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * The description of the Private Network. There is a limit of 255 characters per Private Network.
     */
    description?: pulumi.Input<string>;
    /**
     * Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
     * created.
     */
    instanceIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
     * 255 characters per Private Network name.
     */
    name?: pulumi.Input<string>;
    /**
     * The region where the Private Network should be located. Default region is the EU.
     */
    region?: pulumi.Input<string>;
    /**
     * The name of the region where the Private Network is located.
     */
    regionName?: pulumi.Input<string>;
    /**
     * Time of the last update of the private network.
     */
    updatedAt?: pulumi.Input<string>;
}
