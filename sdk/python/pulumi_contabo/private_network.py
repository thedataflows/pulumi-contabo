# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['Private_networkArgs', 'Private_network']

@pulumi.input_type
class Private_networkArgs:
    def __init__(__self__, *,
                 created_date: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 instance_ids: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 region_name: Optional[pulumi.Input[str]] = None,
                 updated_at: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Private_network resource.
        :param pulumi.Input[str] created_date: The creation date of the Private Network.
        :param pulumi.Input[str] description: The description of the Private Network. There is a limit of 255 characters per Private Network.
        :param pulumi.Input[Sequence[pulumi.Input[int]]] instance_ids: Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
               created.
        :param pulumi.Input[str] name: The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
               255 characters per Private Network name.
        :param pulumi.Input[str] region: The region where the Private Network should be located. Default region is the EU.
        :param pulumi.Input[str] region_name: The name of the region where the Private Network is located.
        :param pulumi.Input[str] updated_at: Time of the last update of the private network.
        """
        if created_date is not None:
            pulumi.set(__self__, "created_date", created_date)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if instance_ids is not None:
            pulumi.set(__self__, "instance_ids", instance_ids)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if region_name is not None:
            pulumi.set(__self__, "region_name", region_name)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter(name="createdDate")
    def created_date(self) -> Optional[pulumi.Input[str]]:
        """
        The creation date of the Private Network.
        """
        return pulumi.get(self, "created_date")

    @created_date.setter
    def created_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_date", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the Private Network. There is a limit of 255 characters per Private Network.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="instanceIds")
    def instance_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]:
        """
        Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
        created.
        """
        return pulumi.get(self, "instance_ids")

    @instance_ids.setter
    def instance_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]):
        pulumi.set(self, "instance_ids", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
        255 characters per Private Network name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        The region where the Private Network should be located. Default region is the EU.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="regionName")
    def region_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the region where the Private Network is located.
        """
        return pulumi.get(self, "region_name")

    @region_name.setter
    def region_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region_name", value)

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[str]]:
        """
        Time of the last update of the private network.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.input_type
class _Private_networkState:
    def __init__(__self__, *,
                 available_ips: Optional[pulumi.Input[int]] = None,
                 cidr: Optional[pulumi.Input[str]] = None,
                 created_date: Optional[pulumi.Input[str]] = None,
                 data_center: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 instance_ids: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input['Private_networkInstanceArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 region_name: Optional[pulumi.Input[str]] = None,
                 updated_at: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Private_network resources.
        :param pulumi.Input[int] available_ips: The totality of available IPs in the Private Network.
        :param pulumi.Input[str] cidr: The cidr range of the Private Network.
        :param pulumi.Input[str] created_date: The creation date of the Private Network.
        :param pulumi.Input[str] data_center: The specific data center where the Private Network is located.
        :param pulumi.Input[str] description: The description of the Private Network. There is a limit of 255 characters per Private Network.
        :param pulumi.Input[Sequence[pulumi.Input[int]]] instance_ids: Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
               created.
        :param pulumi.Input[str] name: The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
               255 characters per Private Network name.
        :param pulumi.Input[str] region: The region where the Private Network should be located. Default region is the EU.
        :param pulumi.Input[str] region_name: The name of the region where the Private Network is located.
        :param pulumi.Input[str] updated_at: Time of the last update of the private network.
        """
        if available_ips is not None:
            pulumi.set(__self__, "available_ips", available_ips)
        if cidr is not None:
            pulumi.set(__self__, "cidr", cidr)
        if created_date is not None:
            pulumi.set(__self__, "created_date", created_date)
        if data_center is not None:
            pulumi.set(__self__, "data_center", data_center)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if instance_ids is not None:
            pulumi.set(__self__, "instance_ids", instance_ids)
        if instances is not None:
            pulumi.set(__self__, "instances", instances)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if region_name is not None:
            pulumi.set(__self__, "region_name", region_name)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter(name="availableIps")
    def available_ips(self) -> Optional[pulumi.Input[int]]:
        """
        The totality of available IPs in the Private Network.
        """
        return pulumi.get(self, "available_ips")

    @available_ips.setter
    def available_ips(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "available_ips", value)

    @property
    @pulumi.getter
    def cidr(self) -> Optional[pulumi.Input[str]]:
        """
        The cidr range of the Private Network.
        """
        return pulumi.get(self, "cidr")

    @cidr.setter
    def cidr(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cidr", value)

    @property
    @pulumi.getter(name="createdDate")
    def created_date(self) -> Optional[pulumi.Input[str]]:
        """
        The creation date of the Private Network.
        """
        return pulumi.get(self, "created_date")

    @created_date.setter
    def created_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_date", value)

    @property
    @pulumi.getter(name="dataCenter")
    def data_center(self) -> Optional[pulumi.Input[str]]:
        """
        The specific data center where the Private Network is located.
        """
        return pulumi.get(self, "data_center")

    @data_center.setter
    def data_center(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "data_center", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the Private Network. There is a limit of 255 characters per Private Network.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="instanceIds")
    def instance_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]:
        """
        Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
        created.
        """
        return pulumi.get(self, "instance_ids")

    @instance_ids.setter
    def instance_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]):
        pulumi.set(self, "instance_ids", value)

    @property
    @pulumi.getter
    def instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['Private_networkInstanceArgs']]]]:
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['Private_networkInstanceArgs']]]]):
        pulumi.set(self, "instances", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
        255 characters per Private Network name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        The region where the Private Network should be located. Default region is the EU.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="regionName")
    def region_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the region where the Private Network is located.
        """
        return pulumi.get(self, "region_name")

    @region_name.setter
    def region_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region_name", value)

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[str]]:
        """
        Time of the last update of the private network.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "updated_at", value)


class Private_network(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 created_date: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 instance_ids: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 region_name: Optional[pulumi.Input[str]] = None,
                 updated_at: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a Private_network resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] created_date: The creation date of the Private Network.
        :param pulumi.Input[str] description: The description of the Private Network. There is a limit of 255 characters per Private Network.
        :param pulumi.Input[Sequence[pulumi.Input[int]]] instance_ids: Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
               created.
        :param pulumi.Input[str] name: The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
               255 characters per Private Network name.
        :param pulumi.Input[str] region: The region where the Private Network should be located. Default region is the EU.
        :param pulumi.Input[str] region_name: The name of the region where the Private Network is located.
        :param pulumi.Input[str] updated_at: Time of the last update of the private network.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[Private_networkArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a Private_network resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param Private_networkArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(Private_networkArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 created_date: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 instance_ids: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 region_name: Optional[pulumi.Input[str]] = None,
                 updated_at: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = Private_networkArgs.__new__(Private_networkArgs)

            __props__.__dict__["created_date"] = created_date
            __props__.__dict__["description"] = description
            __props__.__dict__["instance_ids"] = instance_ids
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["region_name"] = region_name
            __props__.__dict__["updated_at"] = updated_at
            __props__.__dict__["available_ips"] = None
            __props__.__dict__["cidr"] = None
            __props__.__dict__["data_center"] = None
            __props__.__dict__["instances"] = None
        super(Private_network, __self__).__init__(
            'contabo:index/private_network:private_network',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            available_ips: Optional[pulumi.Input[int]] = None,
            cidr: Optional[pulumi.Input[str]] = None,
            created_date: Optional[pulumi.Input[str]] = None,
            data_center: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            instance_ids: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
            instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['Private_networkInstanceArgs']]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            region: Optional[pulumi.Input[str]] = None,
            region_name: Optional[pulumi.Input[str]] = None,
            updated_at: Optional[pulumi.Input[str]] = None) -> 'Private_network':
        """
        Get an existing Private_network resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] available_ips: The totality of available IPs in the Private Network.
        :param pulumi.Input[str] cidr: The cidr range of the Private Network.
        :param pulumi.Input[str] created_date: The creation date of the Private Network.
        :param pulumi.Input[str] data_center: The specific data center where the Private Network is located.
        :param pulumi.Input[str] description: The description of the Private Network. There is a limit of 255 characters per Private Network.
        :param pulumi.Input[Sequence[pulumi.Input[int]]] instance_ids: Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
               created.
        :param pulumi.Input[str] name: The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
               255 characters per Private Network name.
        :param pulumi.Input[str] region: The region where the Private Network should be located. Default region is the EU.
        :param pulumi.Input[str] region_name: The name of the region where the Private Network is located.
        :param pulumi.Input[str] updated_at: Time of the last update of the private network.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _Private_networkState.__new__(_Private_networkState)

        __props__.__dict__["available_ips"] = available_ips
        __props__.__dict__["cidr"] = cidr
        __props__.__dict__["created_date"] = created_date
        __props__.__dict__["data_center"] = data_center
        __props__.__dict__["description"] = description
        __props__.__dict__["instance_ids"] = instance_ids
        __props__.__dict__["instances"] = instances
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["region_name"] = region_name
        __props__.__dict__["updated_at"] = updated_at
        return Private_network(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="availableIps")
    def available_ips(self) -> pulumi.Output[int]:
        """
        The totality of available IPs in the Private Network.
        """
        return pulumi.get(self, "available_ips")

    @property
    @pulumi.getter
    def cidr(self) -> pulumi.Output[str]:
        """
        The cidr range of the Private Network.
        """
        return pulumi.get(self, "cidr")

    @property
    @pulumi.getter(name="createdDate")
    def created_date(self) -> pulumi.Output[str]:
        """
        The creation date of the Private Network.
        """
        return pulumi.get(self, "created_date")

    @property
    @pulumi.getter(name="dataCenter")
    def data_center(self) -> pulumi.Output[str]:
        """
        The specific data center where the Private Network is located.
        """
        return pulumi.get(self, "data_center")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of the Private Network. There is a limit of 255 characters per Private Network.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="instanceIds")
    def instance_ids(self) -> pulumi.Output[Optional[Sequence[int]]]:
        """
        Add the instace Ids to the private network here. If you do not add any instance Ids an empty private network will be
        created.
        """
        return pulumi.get(self, "instance_ids")

    @property
    @pulumi.getter
    def instances(self) -> pulumi.Output[Sequence['outputs.Private_networkInstance']]:
        return pulumi.get(self, "instances")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of
        255 characters per Private Network name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def region(self) -> pulumi.Output[Optional[str]]:
        """
        The region where the Private Network should be located. Default region is the EU.
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="regionName")
    def region_name(self) -> pulumi.Output[str]:
        """
        The name of the region where the Private Network is located.
        """
        return pulumi.get(self, "region_name")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[str]:
        """
        Time of the last update of the private network.
        """
        return pulumi.get(self, "updated_at")

