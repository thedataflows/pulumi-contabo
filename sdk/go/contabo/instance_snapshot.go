// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contabo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Instance_snapshot struct {
	pulumi.CustomResourceState

	// The date when the snapshot will be autmatically deleted.
	AutoDeleteDate pulumi.StringOutput `pulumi:"autoDeleteDate"`
	// The creation date of this instance snapshot.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// Description of this snapshot.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Id of the Image the snapshot was taken from.
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// Name of the Image the snapshot was taken from.
	ImageName pulumi.StringOutput `pulumi:"imageName"`
	// Instance identifier associated with the snapshot.
	InstanceId pulumi.IntPtrOutput `pulumi:"instanceId"`
	// Name of the snapshot.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewInstance_snapshot registers a new resource with the given unique name, arguments, and options.
func NewInstance_snapshot(ctx *pulumi.Context,
	name string, args *Instance_snapshotArgs, opts ...pulumi.ResourceOption) (*Instance_snapshot, error) {
	if args == nil {
		args = &Instance_snapshotArgs{}
	}

	var resource Instance_snapshot
	err := ctx.RegisterResource("contabo:index/instance_snapshot:instance_snapshot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance_snapshot gets an existing Instance_snapshot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance_snapshot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Instance_snapshotState, opts ...pulumi.ResourceOption) (*Instance_snapshot, error) {
	var resource Instance_snapshot
	err := ctx.ReadResource("contabo:index/instance_snapshot:instance_snapshot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance_snapshot resources.
type instance_snapshotState struct {
	// The date when the snapshot will be autmatically deleted.
	AutoDeleteDate *string `pulumi:"autoDeleteDate"`
	// The creation date of this instance snapshot.
	CreatedDate *string `pulumi:"createdDate"`
	// Description of this snapshot.
	Description *string `pulumi:"description"`
	// Id of the Image the snapshot was taken from.
	ImageId *string `pulumi:"imageId"`
	// Name of the Image the snapshot was taken from.
	ImageName *string `pulumi:"imageName"`
	// Instance identifier associated with the snapshot.
	InstanceId *int `pulumi:"instanceId"`
	// Name of the snapshot.
	Name *string `pulumi:"name"`
}

type Instance_snapshotState struct {
	// The date when the snapshot will be autmatically deleted.
	AutoDeleteDate pulumi.StringPtrInput
	// The creation date of this instance snapshot.
	CreatedDate pulumi.StringPtrInput
	// Description of this snapshot.
	Description pulumi.StringPtrInput
	// Id of the Image the snapshot was taken from.
	ImageId pulumi.StringPtrInput
	// Name of the Image the snapshot was taken from.
	ImageName pulumi.StringPtrInput
	// Instance identifier associated with the snapshot.
	InstanceId pulumi.IntPtrInput
	// Name of the snapshot.
	Name pulumi.StringPtrInput
}

func (Instance_snapshotState) ElementType() reflect.Type {
	return reflect.TypeOf((*instance_snapshotState)(nil)).Elem()
}

type instance_snapshotArgs struct {
	// The creation date of this instance snapshot.
	CreatedDate *string `pulumi:"createdDate"`
	// Description of this snapshot.
	Description *string `pulumi:"description"`
	// Instance identifier associated with the snapshot.
	InstanceId *int `pulumi:"instanceId"`
	// Name of the snapshot.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Instance_snapshot resource.
type Instance_snapshotArgs struct {
	// The creation date of this instance snapshot.
	CreatedDate pulumi.StringPtrInput
	// Description of this snapshot.
	Description pulumi.StringPtrInput
	// Instance identifier associated with the snapshot.
	InstanceId pulumi.IntPtrInput
	// Name of the snapshot.
	Name pulumi.StringPtrInput
}

func (Instance_snapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instance_snapshotArgs)(nil)).Elem()
}

type Instance_snapshotInput interface {
	pulumi.Input

	ToInstance_snapshotOutput() Instance_snapshotOutput
	ToInstance_snapshotOutputWithContext(ctx context.Context) Instance_snapshotOutput
}

func (*Instance_snapshot) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance_snapshot)(nil)).Elem()
}

func (i *Instance_snapshot) ToInstance_snapshotOutput() Instance_snapshotOutput {
	return i.ToInstance_snapshotOutputWithContext(context.Background())
}

func (i *Instance_snapshot) ToInstance_snapshotOutputWithContext(ctx context.Context) Instance_snapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Instance_snapshotOutput)
}

// Instance_snapshotArrayInput is an input type that accepts Instance_snapshotArray and Instance_snapshotArrayOutput values.
// You can construct a concrete instance of `Instance_snapshotArrayInput` via:
//
//	Instance_snapshotArray{ Instance_snapshotArgs{...} }
type Instance_snapshotArrayInput interface {
	pulumi.Input

	ToInstance_snapshotArrayOutput() Instance_snapshotArrayOutput
	ToInstance_snapshotArrayOutputWithContext(context.Context) Instance_snapshotArrayOutput
}

type Instance_snapshotArray []Instance_snapshotInput

func (Instance_snapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance_snapshot)(nil)).Elem()
}

func (i Instance_snapshotArray) ToInstance_snapshotArrayOutput() Instance_snapshotArrayOutput {
	return i.ToInstance_snapshotArrayOutputWithContext(context.Background())
}

func (i Instance_snapshotArray) ToInstance_snapshotArrayOutputWithContext(ctx context.Context) Instance_snapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Instance_snapshotArrayOutput)
}

// Instance_snapshotMapInput is an input type that accepts Instance_snapshotMap and Instance_snapshotMapOutput values.
// You can construct a concrete instance of `Instance_snapshotMapInput` via:
//
//	Instance_snapshotMap{ "key": Instance_snapshotArgs{...} }
type Instance_snapshotMapInput interface {
	pulumi.Input

	ToInstance_snapshotMapOutput() Instance_snapshotMapOutput
	ToInstance_snapshotMapOutputWithContext(context.Context) Instance_snapshotMapOutput
}

type Instance_snapshotMap map[string]Instance_snapshotInput

func (Instance_snapshotMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance_snapshot)(nil)).Elem()
}

func (i Instance_snapshotMap) ToInstance_snapshotMapOutput() Instance_snapshotMapOutput {
	return i.ToInstance_snapshotMapOutputWithContext(context.Background())
}

func (i Instance_snapshotMap) ToInstance_snapshotMapOutputWithContext(ctx context.Context) Instance_snapshotMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Instance_snapshotMapOutput)
}

type Instance_snapshotOutput struct{ *pulumi.OutputState }

func (Instance_snapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance_snapshot)(nil)).Elem()
}

func (o Instance_snapshotOutput) ToInstance_snapshotOutput() Instance_snapshotOutput {
	return o
}

func (o Instance_snapshotOutput) ToInstance_snapshotOutputWithContext(ctx context.Context) Instance_snapshotOutput {
	return o
}

// The date when the snapshot will be autmatically deleted.
func (o Instance_snapshotOutput) AutoDeleteDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance_snapshot) pulumi.StringOutput { return v.AutoDeleteDate }).(pulumi.StringOutput)
}

// The creation date of this instance snapshot.
func (o Instance_snapshotOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance_snapshot) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// Description of this snapshot.
func (o Instance_snapshotOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance_snapshot) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Id of the Image the snapshot was taken from.
func (o Instance_snapshotOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance_snapshot) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// Name of the Image the snapshot was taken from.
func (o Instance_snapshotOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance_snapshot) pulumi.StringOutput { return v.ImageName }).(pulumi.StringOutput)
}

// Instance identifier associated with the snapshot.
func (o Instance_snapshotOutput) InstanceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance_snapshot) pulumi.IntPtrOutput { return v.InstanceId }).(pulumi.IntPtrOutput)
}

// Name of the snapshot.
func (o Instance_snapshotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance_snapshot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type Instance_snapshotArrayOutput struct{ *pulumi.OutputState }

func (Instance_snapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance_snapshot)(nil)).Elem()
}

func (o Instance_snapshotArrayOutput) ToInstance_snapshotArrayOutput() Instance_snapshotArrayOutput {
	return o
}

func (o Instance_snapshotArrayOutput) ToInstance_snapshotArrayOutputWithContext(ctx context.Context) Instance_snapshotArrayOutput {
	return o
}

func (o Instance_snapshotArrayOutput) Index(i pulumi.IntInput) Instance_snapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance_snapshot {
		return vs[0].([]*Instance_snapshot)[vs[1].(int)]
	}).(Instance_snapshotOutput)
}

type Instance_snapshotMapOutput struct{ *pulumi.OutputState }

func (Instance_snapshotMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance_snapshot)(nil)).Elem()
}

func (o Instance_snapshotMapOutput) ToInstance_snapshotMapOutput() Instance_snapshotMapOutput {
	return o
}

func (o Instance_snapshotMapOutput) ToInstance_snapshotMapOutputWithContext(ctx context.Context) Instance_snapshotMapOutput {
	return o
}

func (o Instance_snapshotMapOutput) MapIndex(k pulumi.StringInput) Instance_snapshotOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance_snapshot {
		return vs[0].(map[string]*Instance_snapshot)[vs[1].(string)]
	}).(Instance_snapshotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Instance_snapshotInput)(nil)).Elem(), &Instance_snapshot{})
	pulumi.RegisterInputType(reflect.TypeOf((*Instance_snapshotArrayInput)(nil)).Elem(), Instance_snapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Instance_snapshotMapInput)(nil)).Elem(), Instance_snapshotMap{})
	pulumi.RegisterOutputType(Instance_snapshotOutput{})
	pulumi.RegisterOutputType(Instance_snapshotArrayOutput{})
	pulumi.RegisterOutputType(Instance_snapshotMapOutput{})
}
