// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contabo

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Object_storage struct {
	pulumi.CustomResourceState

	AutoScalings Object_storageAutoScalingArrayOutput `pulumi:"autoScalings"`
	// The date on which the Object Storage will be cancelled and therefore no longer available.
	CancelDate pulumi.StringOutput `pulumi:"cancelDate"`
	// The creation date of the Object Storage.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// Your customer number.
	CustomerId pulumi.StringOutput `pulumi:"customerId"`
	// Data center the object storage is located in.
	DataCenter pulumi.StringOutput `pulumi:"dataCenter"`
	// Display name for object storage.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Region where the Object Storage should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`, `SIN`.
	Region pulumi.StringOutput `pulumi:"region"`
	// Your S3 tenant Id. Only required for public sharing.
	S3TenantId pulumi.StringOutput `pulumi:"s3TenantId"`
	// S3 URL to connect to your S3 compatible Object Storage.
	S3Url pulumi.StringOutput `pulumi:"s3Url"`
	// The object storage status. It can be set to `PROVISIONING`,`READY`,`UPGRADING`,`CANCELLED`,`ERROR` or `DISABLED`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Your customer tenant Id.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Amount of purchased / requested object storage in terabyte.
	TotalPurchasedSpaceTb pulumi.Float64Output `pulumi:"totalPurchasedSpaceTb"`
}

// NewObject_storage registers a new resource with the given unique name, arguments, and options.
func NewObject_storage(ctx *pulumi.Context,
	name string, args *Object_storageArgs, opts ...pulumi.ResourceOption) (*Object_storage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.TotalPurchasedSpaceTb == nil {
		return nil, errors.New("invalid value for required argument 'TotalPurchasedSpaceTb'")
	}
	var resource Object_storage
	err := ctx.RegisterResource("contabo:index/object_storage:object_storage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObject_storage gets an existing Object_storage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObject_storage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Object_storageState, opts ...pulumi.ResourceOption) (*Object_storage, error) {
	var resource Object_storage
	err := ctx.ReadResource("contabo:index/object_storage:object_storage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Object_storage resources.
type object_storageState struct {
	AutoScalings []Object_storageAutoScaling `pulumi:"autoScalings"`
	// The date on which the Object Storage will be cancelled and therefore no longer available.
	CancelDate *string `pulumi:"cancelDate"`
	// The creation date of the Object Storage.
	CreatedDate *string `pulumi:"createdDate"`
	// Your customer number.
	CustomerId *string `pulumi:"customerId"`
	// Data center the object storage is located in.
	DataCenter *string `pulumi:"dataCenter"`
	// Display name for object storage.
	DisplayName *string `pulumi:"displayName"`
	// Region where the Object Storage should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`, `SIN`.
	Region *string `pulumi:"region"`
	// Your S3 tenant Id. Only required for public sharing.
	S3TenantId *string `pulumi:"s3TenantId"`
	// S3 URL to connect to your S3 compatible Object Storage.
	S3Url *string `pulumi:"s3Url"`
	// The object storage status. It can be set to `PROVISIONING`,`READY`,`UPGRADING`,`CANCELLED`,`ERROR` or `DISABLED`.
	Status *string `pulumi:"status"`
	// Your customer tenant Id.
	TenantId *string `pulumi:"tenantId"`
	// Amount of purchased / requested object storage in terabyte.
	TotalPurchasedSpaceTb *float64 `pulumi:"totalPurchasedSpaceTb"`
}

type Object_storageState struct {
	AutoScalings Object_storageAutoScalingArrayInput
	// The date on which the Object Storage will be cancelled and therefore no longer available.
	CancelDate pulumi.StringPtrInput
	// The creation date of the Object Storage.
	CreatedDate pulumi.StringPtrInput
	// Your customer number.
	CustomerId pulumi.StringPtrInput
	// Data center the object storage is located in.
	DataCenter pulumi.StringPtrInput
	// Display name for object storage.
	DisplayName pulumi.StringPtrInput
	// Region where the Object Storage should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`, `SIN`.
	Region pulumi.StringPtrInput
	// Your S3 tenant Id. Only required for public sharing.
	S3TenantId pulumi.StringPtrInput
	// S3 URL to connect to your S3 compatible Object Storage.
	S3Url pulumi.StringPtrInput
	// The object storage status. It can be set to `PROVISIONING`,`READY`,`UPGRADING`,`CANCELLED`,`ERROR` or `DISABLED`.
	Status pulumi.StringPtrInput
	// Your customer tenant Id.
	TenantId pulumi.StringPtrInput
	// Amount of purchased / requested object storage in terabyte.
	TotalPurchasedSpaceTb pulumi.Float64PtrInput
}

func (Object_storageState) ElementType() reflect.Type {
	return reflect.TypeOf((*object_storageState)(nil)).Elem()
}

type object_storageArgs struct {
	AutoScalings []Object_storageAutoScaling `pulumi:"autoScalings"`
	// Display name for object storage.
	DisplayName *string `pulumi:"displayName"`
	// Region where the Object Storage should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`, `SIN`.
	Region string `pulumi:"region"`
	// Amount of purchased / requested object storage in terabyte.
	TotalPurchasedSpaceTb float64 `pulumi:"totalPurchasedSpaceTb"`
}

// The set of arguments for constructing a Object_storage resource.
type Object_storageArgs struct {
	AutoScalings Object_storageAutoScalingArrayInput
	// Display name for object storage.
	DisplayName pulumi.StringPtrInput
	// Region where the Object Storage should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`, `SIN`.
	Region pulumi.StringInput
	// Amount of purchased / requested object storage in terabyte.
	TotalPurchasedSpaceTb pulumi.Float64Input
}

func (Object_storageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*object_storageArgs)(nil)).Elem()
}

type Object_storageInput interface {
	pulumi.Input

	ToObject_storageOutput() Object_storageOutput
	ToObject_storageOutputWithContext(ctx context.Context) Object_storageOutput
}

func (*Object_storage) ElementType() reflect.Type {
	return reflect.TypeOf((**Object_storage)(nil)).Elem()
}

func (i *Object_storage) ToObject_storageOutput() Object_storageOutput {
	return i.ToObject_storageOutputWithContext(context.Background())
}

func (i *Object_storage) ToObject_storageOutputWithContext(ctx context.Context) Object_storageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Object_storageOutput)
}

// Object_storageArrayInput is an input type that accepts Object_storageArray and Object_storageArrayOutput values.
// You can construct a concrete instance of `Object_storageArrayInput` via:
//
//	Object_storageArray{ Object_storageArgs{...} }
type Object_storageArrayInput interface {
	pulumi.Input

	ToObject_storageArrayOutput() Object_storageArrayOutput
	ToObject_storageArrayOutputWithContext(context.Context) Object_storageArrayOutput
}

type Object_storageArray []Object_storageInput

func (Object_storageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Object_storage)(nil)).Elem()
}

func (i Object_storageArray) ToObject_storageArrayOutput() Object_storageArrayOutput {
	return i.ToObject_storageArrayOutputWithContext(context.Background())
}

func (i Object_storageArray) ToObject_storageArrayOutputWithContext(ctx context.Context) Object_storageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Object_storageArrayOutput)
}

// Object_storageMapInput is an input type that accepts Object_storageMap and Object_storageMapOutput values.
// You can construct a concrete instance of `Object_storageMapInput` via:
//
//	Object_storageMap{ "key": Object_storageArgs{...} }
type Object_storageMapInput interface {
	pulumi.Input

	ToObject_storageMapOutput() Object_storageMapOutput
	ToObject_storageMapOutputWithContext(context.Context) Object_storageMapOutput
}

type Object_storageMap map[string]Object_storageInput

func (Object_storageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Object_storage)(nil)).Elem()
}

func (i Object_storageMap) ToObject_storageMapOutput() Object_storageMapOutput {
	return i.ToObject_storageMapOutputWithContext(context.Background())
}

func (i Object_storageMap) ToObject_storageMapOutputWithContext(ctx context.Context) Object_storageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Object_storageMapOutput)
}

type Object_storageOutput struct{ *pulumi.OutputState }

func (Object_storageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Object_storage)(nil)).Elem()
}

func (o Object_storageOutput) ToObject_storageOutput() Object_storageOutput {
	return o
}

func (o Object_storageOutput) ToObject_storageOutputWithContext(ctx context.Context) Object_storageOutput {
	return o
}

func (o Object_storageOutput) AutoScalings() Object_storageAutoScalingArrayOutput {
	return o.ApplyT(func(v *Object_storage) Object_storageAutoScalingArrayOutput { return v.AutoScalings }).(Object_storageAutoScalingArrayOutput)
}

// The date on which the Object Storage will be cancelled and therefore no longer available.
func (o Object_storageOutput) CancelDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.CancelDate }).(pulumi.StringOutput)
}

// The creation date of the Object Storage.
func (o Object_storageOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// Your customer number.
func (o Object_storageOutput) CustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.CustomerId }).(pulumi.StringOutput)
}

// Data center the object storage is located in.
func (o Object_storageOutput) DataCenter() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.DataCenter }).(pulumi.StringOutput)
}

// Display name for object storage.
func (o Object_storageOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Region where the Object Storage should be located. Default region is the EU. Following regions are available:
// `EU`,`US-central`, `SIN`.
func (o Object_storageOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Your S3 tenant Id. Only required for public sharing.
func (o Object_storageOutput) S3TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.S3TenantId }).(pulumi.StringOutput)
}

// S3 URL to connect to your S3 compatible Object Storage.
func (o Object_storageOutput) S3Url() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.S3Url }).(pulumi.StringOutput)
}

// The object storage status. It can be set to `PROVISIONING`,`READY`,`UPGRADING`,`CANCELLED`,`ERROR` or `DISABLED`.
func (o Object_storageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Your customer tenant Id.
func (o Object_storageOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *Object_storage) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Amount of purchased / requested object storage in terabyte.
func (o Object_storageOutput) TotalPurchasedSpaceTb() pulumi.Float64Output {
	return o.ApplyT(func(v *Object_storage) pulumi.Float64Output { return v.TotalPurchasedSpaceTb }).(pulumi.Float64Output)
}

type Object_storageArrayOutput struct{ *pulumi.OutputState }

func (Object_storageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Object_storage)(nil)).Elem()
}

func (o Object_storageArrayOutput) ToObject_storageArrayOutput() Object_storageArrayOutput {
	return o
}

func (o Object_storageArrayOutput) ToObject_storageArrayOutputWithContext(ctx context.Context) Object_storageArrayOutput {
	return o
}

func (o Object_storageArrayOutput) Index(i pulumi.IntInput) Object_storageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Object_storage {
		return vs[0].([]*Object_storage)[vs[1].(int)]
	}).(Object_storageOutput)
}

type Object_storageMapOutput struct{ *pulumi.OutputState }

func (Object_storageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Object_storage)(nil)).Elem()
}

func (o Object_storageMapOutput) ToObject_storageMapOutput() Object_storageMapOutput {
	return o
}

func (o Object_storageMapOutput) ToObject_storageMapOutputWithContext(ctx context.Context) Object_storageMapOutput {
	return o
}

func (o Object_storageMapOutput) MapIndex(k pulumi.StringInput) Object_storageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Object_storage {
		return vs[0].(map[string]*Object_storage)[vs[1].(string)]
	}).(Object_storageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Object_storageInput)(nil)).Elem(), &Object_storage{})
	pulumi.RegisterInputType(reflect.TypeOf((*Object_storageArrayInput)(nil)).Elem(), Object_storageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Object_storageMapInput)(nil)).Elem(), Object_storageMap{})
	pulumi.RegisterOutputType(Object_storageOutput{})
	pulumi.RegisterOutputType(Object_storageArrayOutput{})
	pulumi.RegisterOutputType(Object_storageMapOutput{})
}
