// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package contabo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Instance struct {
	pulumi.CustomResourceState

	AddOns InstanceAddOnArrayOutput `pulumi:"addOns"`
	// All other additional IP addresses of the instance.
	AdditionalIps InstanceAdditionalIpArrayOutput `pulumi:"additionalIps"`
	// The date on which the instance will be cancelled.
	CancelDate pulumi.StringPtrOutput `pulumi:"cancelDate"`
	// CPU core count of the instance.
	CpuCores pulumi.IntOutput `pulumi:"cpuCores"`
	// The creation date of the compute instance.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// Image disk size of the instance in megabyte.
	DiskMb pulumi.IntOutput `pulumi:"diskMb"`
	// The instance name chosen by the customer that will be shown in the customer panel.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// If the instance is in an error state (see status property), the error message can be seen in this field.
	ErrorMessage pulumi.StringOutput `pulumi:"errorMessage"`
	// CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
	// 20.04 is the default, currently you have to get the Id with our
	// [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
	// line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
	ImageId   pulumi.StringOutput         `pulumi:"imageId"`
	IpConfigs InstanceIpConfigArrayOutput `pulumi:"ipConfigs"`
	// Time of the last update of the compute instance.
	LastUpdated pulumi.StringOutput `pulumi:"lastUpdated"`
	// Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
	// (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
	// for all available licenses.
	License pulumi.StringOutput `pulumi:"license"`
	// Mac address of the instance.
	MacAddress pulumi.StringOutput `pulumi:"macAddress"`
	// Name of the compute instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// Type of operating system (OS) installed on the instance.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
	Period pulumi.IntOutput `pulumi:"period"`
	// Choose the VPS/VDS product you want to buy. See our products
	// [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
	ProductId pulumi.StringOutput `pulumi:"productId"`
	// InsInstance's category depending on Product Id. Following product types are available: `hdd`,`ssd`,`vds`,`nvme`.
	ProductType pulumi.StringOutput `pulumi:"productType"`
	// Image ram size in megabyte.
	RamMb pulumi.IntOutput `pulumi:"ramMb"`
	// Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
	Region pulumi.StringOutput `pulumi:"region"`
	// CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
	RootPassword pulumi.IntPtrOutput `pulumi:"rootPassword"`
	// CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
	// into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
	// API.
	SshKeys pulumi.IntArrayOutput `pulumi:"sshKeys"`
	// Status of the compute instance. The status can be set to `provisioning`, `uninstalled`, `running`, `stopped`, `error`,
	// `installing`, `unknown`, or `installed`.
	Status pulumi.StringOutput `pulumi:"status"`
	// CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
	// compute instance.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
	// Identifier of the host system.
	VHostId pulumi.IntOutput `pulumi:"vHostId"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		args = &InstanceArgs{}
	}

	var resource Instance
	err := ctx.RegisterResource("contabo:index/instance:instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("contabo:index/instance:instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	AddOns []InstanceAddOn `pulumi:"addOns"`
	// All other additional IP addresses of the instance.
	AdditionalIps []InstanceAdditionalIp `pulumi:"additionalIps"`
	// The date on which the instance will be cancelled.
	CancelDate *string `pulumi:"cancelDate"`
	// CPU core count of the instance.
	CpuCores *int `pulumi:"cpuCores"`
	// The creation date of the compute instance.
	CreatedDate *string `pulumi:"createdDate"`
	// Image disk size of the instance in megabyte.
	DiskMb *int `pulumi:"diskMb"`
	// The instance name chosen by the customer that will be shown in the customer panel.
	DisplayName *string `pulumi:"displayName"`
	// If the instance is in an error state (see status property), the error message can be seen in this field.
	ErrorMessage *string `pulumi:"errorMessage"`
	// CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
	// 20.04 is the default, currently you have to get the Id with our
	// [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
	// line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
	ImageId   *string            `pulumi:"imageId"`
	IpConfigs []InstanceIpConfig `pulumi:"ipConfigs"`
	// Time of the last update of the compute instance.
	LastUpdated *string `pulumi:"lastUpdated"`
	// Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
	// (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
	// for all available licenses.
	License *string `pulumi:"license"`
	// Mac address of the instance.
	MacAddress *string `pulumi:"macAddress"`
	// Name of the compute instance.
	Name *string `pulumi:"name"`
	// Type of operating system (OS) installed on the instance.
	OsType *string `pulumi:"osType"`
	// Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
	Period *int `pulumi:"period"`
	// Choose the VPS/VDS product you want to buy. See our products
	// [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
	ProductId *string `pulumi:"productId"`
	// InsInstance's category depending on Product Id. Following product types are available: `hdd`,`ssd`,`vds`,`nvme`.
	ProductType *string `pulumi:"productType"`
	// Image ram size in megabyte.
	RamMb *int `pulumi:"ramMb"`
	// Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
	Region *string `pulumi:"region"`
	// CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
	RootPassword *int `pulumi:"rootPassword"`
	// CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
	// into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
	// API.
	SshKeys []int `pulumi:"sshKeys"`
	// Status of the compute instance. The status can be set to `provisioning`, `uninstalled`, `running`, `stopped`, `error`,
	// `installing`, `unknown`, or `installed`.
	Status *string `pulumi:"status"`
	// CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
	// compute instance.
	UserData *string `pulumi:"userData"`
	// Identifier of the host system.
	VHostId *int `pulumi:"vHostId"`
}

type InstanceState struct {
	AddOns InstanceAddOnArrayInput
	// All other additional IP addresses of the instance.
	AdditionalIps InstanceAdditionalIpArrayInput
	// The date on which the instance will be cancelled.
	CancelDate pulumi.StringPtrInput
	// CPU core count of the instance.
	CpuCores pulumi.IntPtrInput
	// The creation date of the compute instance.
	CreatedDate pulumi.StringPtrInput
	// Image disk size of the instance in megabyte.
	DiskMb pulumi.IntPtrInput
	// The instance name chosen by the customer that will be shown in the customer panel.
	DisplayName pulumi.StringPtrInput
	// If the instance is in an error state (see status property), the error message can be seen in this field.
	ErrorMessage pulumi.StringPtrInput
	// CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
	// 20.04 is the default, currently you have to get the Id with our
	// [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
	// line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
	ImageId   pulumi.StringPtrInput
	IpConfigs InstanceIpConfigArrayInput
	// Time of the last update of the compute instance.
	LastUpdated pulumi.StringPtrInput
	// Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
	// (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
	// for all available licenses.
	License pulumi.StringPtrInput
	// Mac address of the instance.
	MacAddress pulumi.StringPtrInput
	// Name of the compute instance.
	Name pulumi.StringPtrInput
	// Type of operating system (OS) installed on the instance.
	OsType pulumi.StringPtrInput
	// Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
	Period pulumi.IntPtrInput
	// Choose the VPS/VDS product you want to buy. See our products
	// [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
	ProductId pulumi.StringPtrInput
	// InsInstance's category depending on Product Id. Following product types are available: `hdd`,`ssd`,`vds`,`nvme`.
	ProductType pulumi.StringPtrInput
	// Image ram size in megabyte.
	RamMb pulumi.IntPtrInput
	// Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
	Region pulumi.StringPtrInput
	// CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
	RootPassword pulumi.IntPtrInput
	// CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
	// into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
	// API.
	SshKeys pulumi.IntArrayInput
	// Status of the compute instance. The status can be set to `provisioning`, `uninstalled`, `running`, `stopped`, `error`,
	// `installing`, `unknown`, or `installed`.
	Status pulumi.StringPtrInput
	// CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
	// compute instance.
	UserData pulumi.StringPtrInput
	// Identifier of the host system.
	VHostId pulumi.IntPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	AddOns []InstanceAddOn `pulumi:"addOns"`
	// The date on which the instance will be cancelled.
	CancelDate *string `pulumi:"cancelDate"`
	// The instance name chosen by the customer that will be shown in the customer panel.
	DisplayName *string `pulumi:"displayName"`
	// CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
	// 20.04 is the default, currently you have to get the Id with our
	// [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
	// line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
	ImageId *string `pulumi:"imageId"`
	// Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
	// (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
	// for all available licenses.
	License *string `pulumi:"license"`
	// Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
	Period *int `pulumi:"period"`
	// Choose the VPS/VDS product you want to buy. See our products
	// [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
	ProductId *string `pulumi:"productId"`
	// Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
	Region *string `pulumi:"region"`
	// CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
	RootPassword *int `pulumi:"rootPassword"`
	// CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
	// into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
	// API.
	SshKeys []int `pulumi:"sshKeys"`
	// CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
	// compute instance.
	UserData *string `pulumi:"userData"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	AddOns InstanceAddOnArrayInput
	// The date on which the instance will be cancelled.
	CancelDate pulumi.StringPtrInput
	// The instance name chosen by the customer that will be shown in the customer panel.
	DisplayName pulumi.StringPtrInput
	// CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
	// 20.04 is the default, currently you have to get the Id with our
	// [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
	// line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
	ImageId pulumi.StringPtrInput
	// Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
	// (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
	// for all available licenses.
	License pulumi.StringPtrInput
	// Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
	Period pulumi.IntPtrInput
	// Choose the VPS/VDS product you want to buy. See our products
	// [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
	ProductId pulumi.StringPtrInput
	// Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
	// `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
	Region pulumi.StringPtrInput
	// CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
	RootPassword pulumi.IntPtrInput
	// CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
	// into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
	// API.
	SshKeys pulumi.IntArrayInput
	// CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
	// compute instance.
	UserData pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func (o InstanceOutput) AddOns() InstanceAddOnArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceAddOnArrayOutput { return v.AddOns }).(InstanceAddOnArrayOutput)
}

// All other additional IP addresses of the instance.
func (o InstanceOutput) AdditionalIps() InstanceAdditionalIpArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceAdditionalIpArrayOutput { return v.AdditionalIps }).(InstanceAdditionalIpArrayOutput)
}

// The date on which the instance will be cancelled.
func (o InstanceOutput) CancelDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.CancelDate }).(pulumi.StringPtrOutput)
}

// CPU core count of the instance.
func (o InstanceOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.CpuCores }).(pulumi.IntOutput)
}

// The creation date of the compute instance.
func (o InstanceOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// Image disk size of the instance in megabyte.
func (o InstanceOutput) DiskMb() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.DiskMb }).(pulumi.IntOutput)
}

// The instance name chosen by the customer that will be shown in the customer panel.
func (o InstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// If the instance is in an error state (see status property), the error message can be seen in this field.
func (o InstanceOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ErrorMessage }).(pulumi.StringOutput)
}

// CAUTION: On updating this value your server will be reinstalled! Image Id is used to set up the compute instance. Ubuntu
// 20.04 is the default, currently you have to get the Id with our
// [API](https://api.contabo.com/#tag/Images/operation/retrieveImage) or via our [command
// line](https://github.com/contabo/cntb) tool with this command: `cntb get images`.
func (o InstanceOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

func (o InstanceOutput) IpConfigs() InstanceIpConfigArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceIpConfigArrayOutput { return v.IpConfigs }).(InstanceIpConfigArrayOutput)
}

// Time of the last update of the compute instance.
func (o InstanceOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.LastUpdated }).(pulumi.StringOutput)
}

// Additional license in order to enhance your chosen product. It is mainly needed for software licenses on your product
// (not needed for windows). See our [api documentation](https://api.contabo.com/#tag/Instances/operation/createInstance)
// for all available licenses.
func (o InstanceOutput) License() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.License }).(pulumi.StringOutput)
}

// Mac address of the instance.
func (o InstanceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MacAddress }).(pulumi.StringOutput)
}

// Name of the compute instance.
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Type of operating system (OS) installed on the instance.
func (o InstanceOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. The default setting is 1 month.
func (o InstanceOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.Period }).(pulumi.IntOutput)
}

// Choose the VPS/VDS product you want to buy. See our products
// [here](https://api.contabo.com/#tag/Instances/operation/createInstance).
func (o InstanceOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

// InsInstance's category depending on Product Id. Following product types are available: `hdd`,`ssd`,`vds`,`nvme`.
func (o InstanceOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ProductType }).(pulumi.StringOutput)
}

// Image ram size in megabyte.
func (o InstanceOutput) RamMb() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.RamMb }).(pulumi.IntOutput)
}

// Instance Region where the compute instance should be located. Default region is the EU. Following regions are available:
// `EU`,`US-central`,`US-east`,`US-west`,`SIN`.
func (o InstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// CAUTION: On updating this value your server will be reinstalled! Root password of the compute instance.
func (o InstanceOutput) RootPassword() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.RootPassword }).(pulumi.IntPtrOutput)
}

// CAUTION: On updating this value your server will be reinstalled! Array of `secretIds` of public SSH keys for logging
// into as defaultUser with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management
// API.
func (o InstanceOutput) SshKeys() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntArrayOutput { return v.SshKeys }).(pulumi.IntArrayOutput)
}

// Status of the compute instance. The status can be set to `provisioning`, `uninstalled`, `running`, `stopped`, `error`,
// `installing`, `unknown`, or `installed`.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// CAUTION: On updating this value your server will be reinstalled! Cloud-Init Config in order to customize during start of
// compute instance.
func (o InstanceOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.UserData }).(pulumi.StringPtrOutput)
}

// Identifier of the host system.
func (o InstanceOutput) VHostId() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.VHostId }).(pulumi.IntOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
